version: "3.8"

services:
  database:
    image: postgres:14-alpine
    container_name: kupi_db
    env_file:
      - ./envs/db.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db_data:${POSTGRES_PGDATA}
    networks:
      - kupi_net
    restart: always

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: kupi_backend
    env_file:
      - ./envs/backend.env
    environment:
      - PORT=4000
      - JWT_SECRET=${JWT_SECRET}
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PGDATA=${POSTGRES_PGDATA}
    depends_on:
      - database
    ports:
      - "4000:4000"
    networks:
      - kupi_net
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: kupi_frontend
    env_file:
      - ./envs/frontend.env
    environment:
      - REACT_APP_API_BASE_URL=${REACT_APP_API_BASE_URL}
    ports:
      - "8081:80"
    networks:
      - kupi_net
    restart: always

volumes:
  db_data:
networks:
  kupi_net:
    driver: bridge